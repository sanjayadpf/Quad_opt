#cmake_minimum_required(VERSION 2.8.3)

#project(softactuator)

#find_package(catkin REQUIRED COMPONENTS
#	roscpp
#	rospy
#	std_msgs
#	message_generation
#	)
#
#add_service_files(
#	  FILES
#	  SetJointStiffness.srv
#	    )
#
#    generate_messages(
#	      DEPENDENCIES
#	        std_msgs
#		)
#
#	catkin_package(
#		  CATKIN_DEPENDS roscpp rospy std_msgs message_runtime
#		  )
#
#	  include_directories(
#		    ${catkin_INCLUDE_DIRS}
#		    ${CMAKE_CURRENT_SOURCE_DIR}/src
#		    ${PROJECT_SOURCE_DIR}/srv
#		    )
#
#	    add_library(${PROJECT_NAME} src/JointStiffnessPlugin.cpp)
#
#	    target_link_libraries(${PROJECT_NAME} ${catkin_LIBRARIES})
#
#	    add_dependencies(${PROJECT_NAME} ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})
#
#find_package(roslaunch)
#
#foreach(dir config launch meshes urdf)
#	
#install(DIRECTORY ${dir}/
#DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}/${dir})
#	  
#endforeach(dir)
#------------------------------------------------------------------------------------------------------------------------------------------
cmake_minimum_required(VERSION 3.0.2)
project(softactuator)

## Compile as C++14
#set(CMAKE_CXX_STANDARD 14)
#set(CMAKE_CXX_STANDARD_REQUIRED ON)

## Find catkin macros and libraries
find_package(catkin REQUIRED COMPONENTS
	  roscpp
	    rospy
	      std_msgs
	        message_generation
		)

	## System dependencies are found with CMake's conventions
	#find_package(Boost REQUIRED COMPONENTS system)

	## Generate services in the 'srv' folder
	add_service_files(
		  FILES
		 	SetJointStiffness.srv
		    )

	    ## Generate added messages and services with any dependencies listed here
	    generate_messages(
	    	      DEPENDENCIES
	    	      std_msgs
	    		)

		## Declare catkin package
		catkin_package(
			  CATKIN_DEPENDS roscpp rospy std_msgs message_runtime
			  )

		  ## Specify additional locations of header files
		  include_directories(
			    ${catkin_INCLUDE_DIRS}
				)
			add_executable(${PROJECT_NAME}_node src/JointStiffnessPlugin.cpp)

			## Declare a C++ library
			#add_library(${PROJECT_NAME}
			#	  src/JointStiffnessPlugin.cpp
			#	  )

			  ## Specify libraries to link a library or executable target against
			  target_link_libraries(${PROJECT_NAME}_node
				    ${catkin_LIBRARIES}
				    )

			    ## Mark executables and/or libraries for installation
			    # install(TARGETS ${PROJECT_NAME}
			    #	      LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
			    #	      )

			      ## Mark other files for installation (e.g. launch and bag files, etc.)
			      # install(DIRECTORY launch/
			      #	        DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}/launch
			      #		)

				## Specify dependencies for the library
				add_dependencies(${PROJECT_NAME}_node ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})

